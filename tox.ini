[tox]
skipsdist=True
envlist = lintverbose, unit, functional
skip_missing_interpreters = True

[testenv]
basepython = python3
setenv =
  PYTHONPATH = .

[testenv:unit]
commands = pytest -v \
	    --ignore {toxinidir}/tests/functional \
	    --ignore {toxinidir}/interfaces \
	    --ignore {toxinidir}/layers \
	    --cov=lib \
	    --cov=reactive \
	    --cov=actions \
	    --cov-report=term \
	    --cov-report=annotate:report/unit/coverage-annotated \
	    --cov-report=html:report/unit/coverage-html \
	    --html=report/unit/tests/index.html \
	    --junitxml=report/unit/junit.xml
deps = -r{toxinidir}/tests/unit/requirements.txt
       -r{toxinidir}/requirements.txt
setenv = PYTHONPATH={toxinidir}/lib

[testenv:functional]
passenv =
  HOME
  JUJU_REPOSITORY
  PATH
  PYTEST_MODEL
  PYTEST_KEEP_MODEL
  PYTEST_CLOUD_NAME
  PYTEST_CLOUD_REGION
commands = pytest -x -v \
           -k {env:PYTEST_SELECT_TESTS:test} \
           -m "{env:PYTEST_SELECT_MARKS:not excluded}" \
	    --ignore {toxinidir}/tests/unit \
	    --ignore {toxinidir}/interfaces \
	    --ignore {toxinidir}/layers \
	    --html=report/functional/index.html \
	    --junitxml=report/functional/junit.xml
deps = -r{toxinidir}/tests/functional/requirements.txt
	   -r{toxinidir}/requirements.txt

[testenv:lint]
commands = flake8 --max-complexity=40 --format=html --htmldir=report/lint/ --tee
deps =
    flake8
    flake8-colors
    flake8-docstrings
    flake8-html
    pep8-naming

[testenv:lintverbose]
commands = flake8 --max-complexity=40
deps =
    flake8
    flake8-colors
    flake8-docstrings
    pep8-naming

[testenv:lintjunit]
commands = flake8 --max-complexity=40 --format junit-xml --output-file=report/lint/junit.xml
deps =
    flake8
    flake8-colors
    flake8-docstrings
    flake8-formatter-junit-xml
    flake8-import-order
    pep8-naming

[flake8]
exclude =
    .git,
    __pycache__,
    .tox,
    layers,
    interfaces,
max-line-length = 120
max-complexity = 10

[pytest]
markers =
    deploy: mark deployment tests to allow running w/o redeploy
filterwarnings = 
    ignore::DeprecationWarning

